
type {{termname}} struct {
	Config   *models.TermConfig
	rotateat int64
  rotateatkey string
}

func (t *{{termname}}) Exec(s interface{}) {
	commands := utils.RdsSendStruct{}
	d := s.(*{{name}})
  {{exec}}

	if len(commands.Commands) > 0 {

		key := utils.GetKeyByObj(t.Config.Key, *d.req)
		key = models.RedisKT + "_" + d.Tag + "_" + key
		commands.Key = key
		now := utils.GetNowSec()
		if (t.rotateatkey != key) || t.rotateat < now {
			snow.NeedRotate(&snow.SnowSys{&utils.SnowKey{Key:key}, nil, d.Tag, "{{term}}", d.req.STime,t.Config.SpKey}, t.Config.Snow[0])
			t.rotateat = now
            t.rotateatkey = key
		}
		d.AddCommods(&commands)
	}
	d.WG.Done()
}
func (t *{{termname}}) SetConfig(c *models.TermConfig) {
	t.Config = c
}
